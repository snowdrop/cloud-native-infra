- set_fact:
    k8s_server: https://{{ public_ip_address }}:6443
    inventory_location: "{{ lookup('env', 'PWD') }}/inventory"

- name: Get secret name
  shell: |
    kubectl -n kube-system get secret | grep default-token | awk '{print $1}'
  register: get_secret_out

- set_fact:
    k8s_secret_name: "{{ get_secret_out.stdout }}"

- name: Get CA
  shell: |
    kubectl -n kube-system get secret/{{ k8s_secret_name }} -o jsonpath='{.data.ca\.crt}'
  register: get_ca_out

- set_fact:
    k8s_ca: "{{ get_ca_out.stdout }}"

- name: Get token
  shell: |
    kubectl -n kube-system get secret/{{ k8s_secret_name }} -o jsonpath='{.data.token}' | base64 -d
  register: get_token_out

- set_fact:
    k8s_token: "{{ get_token_out.stdout }}"

- name: Get namespace
  shell: |
    kubectl -n kube-system get secret/{{ k8s_secret_name }} -o jsonpath='{.data.namespace}' | base64 -d
  register: get_namespace_out

- set_fact:
    k8s_namespace: "{{ get_namespace_out.stdout }}"

- name: Save config
  template:
    src: "k8s-config.yml.j2"
    dest: "{{ inventory_location }}/remote-config.yml"
  delegate_to: localhost

- name: Print kubernetes config file location
  debug:
    msg:
      - "You can use the following Kubernetes config file to interact with remote cluster via kubectl"
      - "{{ inventory_location }}/remote-config.yml"
